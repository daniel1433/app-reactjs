[{"C:\\xampp\\htdocs\\masseq\\front\\src\\index.tsx":"1","C:\\xampp\\htdocs\\masseq\\front\\src\\App.tsx":"2","C:\\xampp\\htdocs\\masseq\\front\\src\\reportWebVitals.ts":"3","C:\\xampp\\htdocs\\masseq\\front\\src\\components\\navbar\\navbarCtr.tsx":"4","C:\\xampp\\htdocs\\masseq\\front\\src\\components\\navbar\\navbar.tsx":"5","C:\\xampp\\htdocs\\masseq\\front\\src\\components\\footer\\footerCtr.tsx":"6","C:\\xampp\\htdocs\\masseq\\front\\src\\components\\footer\\footer.tsx":"7","C:\\xampp\\htdocs\\masseq\\front\\src\\routers\\router.tsx":"8","C:\\xampp\\htdocs\\masseq\\front\\src\\pages\\client\\client.tsx":"9","C:\\xampp\\htdocs\\masseq\\front\\src\\pages\\login\\loginCtr.tsx":"10","C:\\xampp\\htdocs\\masseq\\front\\src\\pages\\login\\login.tsx":"11","C:\\xampp\\htdocs\\masseq\\front\\src\\pages\\client\\clientCtr.tsx":"12","C:\\xampp\\htdocs\\masseq\\front\\src\\services\\api_servise.ts":"13"},{"size":564,"mtime":1611417651131,"results":"14","hashOfConfig":"15"},{"size":1091,"mtime":1611430256878,"results":"16","hashOfConfig":"15"},{"size":425,"mtime":1611417302229,"results":"17","hashOfConfig":"15"},{"size":281,"mtime":1611426983499,"results":"18","hashOfConfig":"15"},{"size":1272,"mtime":1611427170628,"results":"19","hashOfConfig":"15"},{"size":232,"mtime":1611418340840,"results":"20","hashOfConfig":"15"},{"size":1447,"mtime":1611596197397,"results":"21","hashOfConfig":"15"},{"size":957,"mtime":1611429350896,"results":"22","hashOfConfig":"15"},{"size":8081,"mtime":1611505099522,"results":"23","hashOfConfig":"15"},{"size":1648,"mtime":1611595869949,"results":"24","hashOfConfig":"15"},{"size":1733,"mtime":1611465118786,"results":"25","hashOfConfig":"15"},{"size":7920,"mtime":1611505900546,"results":"26","hashOfConfig":"15"},{"size":1703,"mtime":1611595711724,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1rp9919",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\xampp\\htdocs\\masseq\\front\\src\\index.tsx",[],["57","58"],"C:\\xampp\\htdocs\\masseq\\front\\src\\App.tsx",[],"C:\\xampp\\htdocs\\masseq\\front\\src\\reportWebVitals.ts",[],"C:\\xampp\\htdocs\\masseq\\front\\src\\components\\navbar\\navbarCtr.tsx",[],"C:\\xampp\\htdocs\\masseq\\front\\src\\components\\navbar\\navbar.tsx",[],"C:\\xampp\\htdocs\\masseq\\front\\src\\components\\footer\\footerCtr.tsx",[],"C:\\xampp\\htdocs\\masseq\\front\\src\\components\\footer\\footer.tsx",[],"C:\\xampp\\htdocs\\masseq\\front\\src\\routers\\router.tsx",["59"],"import React from 'react';\r\nimport {\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport Client from '../pages/client/clientCtr';\r\nimport Login from '../pages/login/loginCtr';\r\n\r\n// Pages\r\nimport Cliente from '../pages/client/clientCtr';\r\n\r\ninterface ElementRoute { component: any; uri: string; validate: boolean }\r\nconst arrayRouters: ElementRoute[] = [\r\n    { component: Client, uri: 'client', validate: true },\r\n    { component: Login, uri: 'login', validate: false },\r\n    { component: Login, uri: '', validate: false },\r\n]\r\n\r\n\r\nconst Routers: any = (props: any) => {\r\n    return <Switch>\r\n        {arrayRouters.map((route: ElementRoute, i: number) => {\r\n            return <Route key={i} exact path={`/${route.uri}`}>\r\n                {route.validate ? props.state.isLogged ? <route.component {...props} /> : <Login {...props} /> : <route.component {...props} />}\r\n            </Route>\r\n        })}\r\n    </Switch>\r\n}\r\n\r\nexport default Routers;","C:\\xampp\\htdocs\\masseq\\front\\src\\pages\\client\\client.tsx",[],"C:\\xampp\\htdocs\\masseq\\front\\src\\pages\\login\\loginCtr.tsx",["60","61"],"C:\\xampp\\htdocs\\masseq\\front\\src\\pages\\login\\login.tsx",[],"C:\\xampp\\htdocs\\masseq\\front\\src\\pages\\client\\clientCtr.tsx",["62","63","64","65","66","67","68","69","70","71","72"],"import React from 'react';\r\nimport Client from './client';\r\nimport API from '../../services/api_servise';\r\nimport * as crypto from 'crypto-js';\r\n\r\ninterface ClientProps {\r\n\r\n}\r\n\r\nexport default class ClientCtr extends React.Component<ClientProps>{\r\n\r\n    api: API = new API();\r\n    countSelected = 0;\r\n    state = {\r\n        arrayClients: []\r\n        , idClientEdit: null\r\n        , newClient: false\r\n        , deleteAll: false\r\n        , arrayDocumentType: []\r\n        , arrayDepartament: []\r\n        , arrayMunicipality: []\r\n        , form: {\r\n            full_name: \"\"\r\n            , id_document_type: \"\"\r\n            , document_number: \"\"\r\n            , address: \"\"\r\n            , phone: \"\"\r\n            , user_name: \"\"\r\n            , id_municipaly: \"\"\r\n            , id_departament: \"\"\r\n            , password: \"\"\r\n        }\r\n        , message: null\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        let clients: any = await this.api.get('/clients', [], true, 'api');\r\n        let departaments: any = await this.api.get('/departaments', [], true, 'api');\r\n        let document_types: any = await this.api.get('/document_types', [], true, 'api');\r\n\r\n        this.setState({\r\n            arrayClients: clients\r\n            , arrayDepartament: departaments\r\n            , arrayDocumentType: document_types\r\n            // , arrayMunicipality: municipality\r\n        })\r\n\r\n        // console.log(\"Result==> \", clients,departaments, municipality,document_types);\r\n\r\n\r\n    }\r\n\r\n    getClients = async () => {\r\n        let clients: any = await this.api.get('/clients', [], true, 'api');\r\n        this.setState({\r\n            arrayClients: clients\r\n            , idClientEdit: null, form: {\r\n                full_name: \"\"\r\n                , id_document_type: \"\"\r\n                , address: \"\"\r\n                , phone: \"\"\r\n                , user_name: \"\"\r\n                , id_municipaly: \"\"\r\n                , id_departament: \"\"\r\n                , password: \"\"\r\n            }\r\n            , message: null\r\n            , newClient: false\r\n        })\r\n    }\r\n\r\n    handleCreateClient = () => {\r\n        this.setState({ newClient: true });\r\n    }\r\n\r\n    handleDelete = async (idClient: number) => {\r\n        let client: any = this.state.arrayClients.find((val: any) => val.id_client == idClient);\r\n        // let newArray = this.state.arrayClients;\r\n        // newArray.splice(position, 1);\r\n        // this.setState({ arrayClients: newArray });\r\n\r\n        let params: any = {\r\n            deleteClient: [{\r\n                id_client: client.id_client\r\n            }]\r\n        };\r\n\r\n        let result: any = await this.api.post(\"api/deleteClients\", params);\r\n\r\n        console.log(\"Resultado delete=>\", result);\r\n        console.log({ deleteClient: [client] });\r\n\r\n\r\n        if (result.status) this.getClients();\r\n        else {\r\n            this.setState({ message: \"Error al eliminar el cliente.\" });\r\n        }\r\n    }\r\n\r\n    handleEdit = (idClient: number) => {\r\n        let currentClient = this.state.arrayClients.find((val: any) => val.id_client == idClient);\r\n        // console.log(\"intenta editar? \", currentClient, idClient);\r\n\r\n        if (currentClient) {\r\n            this.setState({\r\n                form: currentClient\r\n                , idClientEdit: idClient\r\n            });\r\n        } else {\r\n            this.setState({ message: \"Error al consultar el usuario a editar\" });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleSelected = (idClient: number) => {\r\n        // console.log(\"Se ejecuta?\", this.countSelected);\r\n        let array = this.state.arrayClients;\r\n        let findElement: any = array.find((val: any) => val.id_client == idClient);\r\n        findElement.selected = findElement.selected ? false : true;\r\n        this.countSelected = findElement.selected ? this.countSelected + 1 : this.countSelected - 1;\r\n        this.setState({ arrayClients: array });\r\n    }\r\n\r\n    handleDeleteAll = async () => {\r\n        this.countSelected = 0;\r\n        let arrayElementForDelete = this.state.arrayClients.filter((val: any) => val.selected);\r\n        let params: any = {\r\n            deleteClient: arrayElementForDelete.map((val: any) => { return { id_client: val.id_client } })\r\n        };\r\n        let result: any = await this.api.post(\"api/deleteClients\", params);\r\n        this.setState({\r\n            arrayClients : []\r\n        })\r\n        if (result.status) {\r\n            await this.getClients();\r\n            // this.setState({\r\n            //     arrayClients: this.state.arrayClients.filter((val: any) => !val.selected)\r\n            // })\r\n        }\r\n        else {\r\n            this.setState({ message: \"Error al eliminar el cliente.\" });\r\n        }\r\n    }\r\n\r\n    handleChangeInput = async (e: any) => {\r\n\r\n        switch (e.target.name) {\r\n            case \"id_document_type\":\r\n                let document: any = this.state.arrayDocumentType.find((val: any) => val.id_document_type == e.target.value && e.target.value != 0)\r\n                this.setState({\r\n                    form: { ...this.state.form, [e.target.name]: e.target.value, document_type: document.document_type },\r\n                });\r\n                break;\r\n\r\n            case \"id_municipaly\":\r\n                let municipaly: any = this.state.arrayMunicipality.find((val: any) => val.id_municipaly == e.target.value && e.target.value != 0)\r\n                this.setState({\r\n                    form: { ...this.state.form, [e.target.name]: e.target.value, municipaly: municipaly.municipaly },\r\n                });\r\n                break;\r\n\r\n            case \"id_departament\":\r\n                let idDep: any = e.target.value;\r\n                let departament: any = this.state.arrayDepartament.find((val: any) => val.id_departament == idDep && e.target.value != 0)\r\n                this.setState({\r\n                    form: { ...this.state.form, [e.target.name]: e.target.value, departament: departament.departament }\r\n                }, () => console.log(this.state.form, idDep));\r\n\r\n                let municipality: any = await this.api.get(`/municipalities?id_departament=${idDep}`, [], true, 'api');\r\n                this.setState({\r\n                    arrayMunicipality: municipality\r\n                }, () => console.log(this.state.form, idDep));\r\n                break;\r\n\r\n            default:\r\n                this.setState({ form: { ...this.state.form, [e.target.name]: e.target.value } });\r\n                break;\r\n        }\r\n    }\r\n\r\n    updateClient = async () => {\r\n        console.log(this.state.form);\r\n\r\n        let arrayClient: any = this.state.arrayClients;\r\n        let position = arrayClient.findIndex((val: any) => val.id_client == this.state.idClientEdit);\r\n        let currentClient = { ...arrayClient[position], ...this.state.form };\r\n        if (currentClient.password && currentClient.password != \"\") currentClient.password = crypto.MD5(currentClient.password).toString()\r\n\r\n        console.log(currentClient);\r\n\r\n        let result: any;\r\n        if (this.state.newClient) {\r\n            result = await this.api.post('api/clients', currentClient);\r\n        } else {\r\n            result = await this.api.put('api/clients', currentClient);\r\n        }\r\n\r\n        if (result.status) {\r\n            await this.getClients();\r\n        } else {\r\n            this.setState({ message: \"Error al intentar actualizar o crear un nuevo cliente.\" })\r\n        }\r\n    }\r\n\r\n    cancelUpdate = () => {\r\n        this.setState({\r\n            form: {\r\n                full_name: \"\"\r\n                , id_document_type: \"\"\r\n                , address: \"\"\r\n                , phone: \"\"\r\n                , user_name: \"\"\r\n                , id_municipaly: \"\"\r\n                , id_departament: \"\"\r\n                , password: \"\"\r\n            },\r\n            idClientEdit: null\r\n            , message: null\r\n            , newClient: false\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        return <Client {...this} />;\r\n    }\r\n}","C:\\xampp\\htdocs\\masseq\\front\\src\\services\\api_servise.ts",["73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":10,"column":8,"nodeType":"80","messageId":"81","endLine":10,"endColumn":15},{"ruleId":"82","severity":1,"message":"83","line":34,"column":79,"nodeType":"84","messageId":"85","endLine":34,"endColumn":81},{"ruleId":"82","severity":1,"message":"83","line":34,"column":108,"nodeType":"84","messageId":"85","endLine":34,"endColumn":110},{"ruleId":"82","severity":1,"message":"86","line":77,"column":84,"nodeType":"84","messageId":"85","endLine":77,"endColumn":86},{"ruleId":"82","severity":1,"message":"86","line":101,"column":86,"nodeType":"84","messageId":"85","endLine":101,"endColumn":88},{"ruleId":"82","severity":1,"message":"86","line":119,"column":71,"nodeType":"84","messageId":"85","endLine":119,"endColumn":73},{"ruleId":"82","severity":1,"message":"86","line":150,"column":106,"nodeType":"84","messageId":"85","endLine":150,"endColumn":108},{"ruleId":"82","severity":1,"message":"83","line":150,"column":142,"nodeType":"84","messageId":"85","endLine":150,"endColumn":144},{"ruleId":"82","severity":1,"message":"86","line":157,"column":105,"nodeType":"84","messageId":"85","endLine":157,"endColumn":107},{"ruleId":"82","severity":1,"message":"83","line":157,"column":141,"nodeType":"84","messageId":"85","endLine":157,"endColumn":143},{"ruleId":"82","severity":1,"message":"86","line":165,"column":106,"nodeType":"84","messageId":"85","endLine":165,"endColumn":108},{"ruleId":"82","severity":1,"message":"83","line":165,"column":133,"nodeType":"84","messageId":"85","endLine":165,"endColumn":135},{"ruleId":"82","severity":1,"message":"86","line":186,"column":74,"nodeType":"84","messageId":"85","endLine":186,"endColumn":76},{"ruleId":"82","severity":1,"message":"83","line":188,"column":62,"nodeType":"84","messageId":"85","endLine":188,"endColumn":64},{"ruleId":"87","severity":1,"message":"88","line":24,"column":117,"nodeType":"89","messageId":"90","endLine":24,"endColumn":118,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"@typescript-eslint/no-unused-vars","'Cliente' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-useless-escape","Unnecessary escape character: \\,.","Literal","unnecessaryEscape",["94","95"],"no-global-assign","no-unsafe-negation",{"messageId":"96","fix":"97","desc":"98"},{"messageId":"99","fix":"100","desc":"101"},"removeEscape",{"range":"102","text":"103"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"104","text":"105"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[923,924],"",[923,923],"\\"]